package Main;

import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 * Clase encargada de mostrar la ventana de comentarios de un video. Esta clase
 * permite visualizar los comentarios asociados a un video específico en una
 * interfaz gráfica.
 *
 */
public class Ventana_Comentarios extends javax.swing.JFrame {

    // Variables estáticas para almacenar el usuario actual, la base de datos y el video actual
    private static Document Usuario;
    private static MongoDatabase database;
    private static Document video;

    /**
     * Constructor de la clase Ventana_Comentarios. Este método inicializa los
     * componentes de la ventana y carga los comentarios asociados al video.
     *
     * @param Usuario Documento que representa al usuario actual (probablemente
     * información de usuario desde la base de datos).
     * @param video Documento que representa al video del cual se mostrarán los
     * comentarios.
     * @param database Objeto MongoDatabase que representa la conexión a la base
     * de datos MongoDB.
     */
    public Ventana_Comentarios(Document Usuario, Document video, MongoDatabase database) {
        initComponents();
        this.Usuario = Usuario;
        this.database = database;
        this.video = video;
        loadComments();
    }

    /**
     * Método para cargar y mostrar los comentarios asociados al video. Este
     * método obtiene los comentarios desde la colección "Comentarios" de la
     * base de datos MongoDB y los muestra en una tabla en la interfaz gráfica.
     * Se realiza una búsqueda utilizando el videoId del video seleccionado para
     * filtrar los comentarios correspondientes.
     *
     * Si el video no está definido o no contiene un "videoId", muestra un
     * mensaje de error.
     */
    private void loadComments() {
        if (video == null || !video.containsKey("videoId")) {
            javax.swing.JOptionPane.showMessageDialog(this, "El video no está definido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        MongoCollection<Document> comentariosCollection = database.getCollection("Comentarios");
        DefaultTableModel model = (DefaultTableModel) jTable_Comentarios.getModel();
        model.setRowCount(0); // Clear existing rows in the JTable

        // Retrieve videoId as ObjectId and use it in the query
        ObjectId videoId = video.getObjectId("videoId");
        MongoCursor<Document> cursor = comentariosCollection.find(new Document("videoId", videoId)).iterator();

        try {
            while (cursor.hasNext()) {
                Document comentario = cursor.next();
                String user = comentario.getString("usuario");
                String comment = comentario.getString("comentario");
                model.addRow(new Object[]{user, comment}); // Add rows to the JTable
            }
        } finally {
            cursor.close();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel_Comentarios = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Comentarios = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_Comentarios = new javax.swing.JTextArea();
        jLabel_Comentario_Nuevo = new javax.swing.JLabel();
        jButton_Subir_Comentario = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblIcono = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel_Comentarios.setBackground(new java.awt.Color(38, 38, 38));

        jTable_Comentarios.setBackground(new java.awt.Color(33, 79, 154));
        jTable_Comentarios.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jTable_Comentarios.setForeground(new java.awt.Color(255, 255, 255));
        jTable_Comentarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Usuario", "Comentario"
            }
        ));
        jTable_Comentarios.setRowSelectionAllowed(false);
        jTable_Comentarios.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTable_Comentarios.setShowHorizontalLines(true);
        jScrollPane1.setViewportView(jTable_Comentarios);

        jTextArea_Comentarios.setColumns(20);
        jTextArea_Comentarios.setRows(5);
        jScrollPane2.setViewportView(jTextArea_Comentarios);

        jLabel_Comentario_Nuevo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel_Comentario_Nuevo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_Comentario_Nuevo.setText("Comentario Nuevo:");

        jButton_Subir_Comentario.setBackground(new java.awt.Color(22, 62, 100));
        jButton_Subir_Comentario.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jButton_Subir_Comentario.setText("Subir");
        jButton_Subir_Comentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Subir_ComentarioActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(89, 89, 89));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        lblTitulo.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Administrar Cuenta");

        lblIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UAATube Icon 150x92.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblIcono)
                .addGap(18, 18, 18)
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIcono))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel_ComentariosLayout = new javax.swing.GroupLayout(jPanel_Comentarios);
        jPanel_Comentarios.setLayout(jPanel_ComentariosLayout);
        jPanel_ComentariosLayout.setHorizontalGroup(
            jPanel_ComentariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ComentariosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel_ComentariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_Comentario_Nuevo)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel_ComentariosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Subir_Comentario, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel_ComentariosLayout.setVerticalGroup(
            jPanel_ComentariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ComentariosLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel_ComentariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_ComentariosLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_ComentariosLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jLabel_Comentario_Nuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Subir_Comentario, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Comentarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_Comentarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que maneja el evento de hacer clic en el botón para subir un
     * comentario. Este método valida los datos ingresados por el usuario,
     * obtiene la información necesaria, y guarda el comentario en la base de
     * datos MongoDB.
     *
     * @param evt El evento de acción del botón (click) que activa este método.
     */
    private void jButton_Subir_ComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Subir_ComentarioActionPerformed
        // TODO add your handling code here:
        if (video == null || !video.containsKey("videoId")) {
            javax.swing.JOptionPane.showMessageDialog(this, "El video no está definido.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        String commentText = jTextArea_Comentarios.getText().trim();
        if (commentText.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "El comentario no puede estar vacío.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Retrieve the current user's name from Usuario
        String userName = (Usuario != null && Usuario.containsKey("nombre_usuario"))
                ? Usuario.getString("nombre_usuario")
                : "Anonimo"; // Use "Anonimo" if no user is logged in

        MongoCollection<Document> comentariosCollection = database.getCollection("Comentarios");
        Document newComment = new Document()
                .append("usuario", userName) // Add the current user's name
                .append("videoId", video.getObjectId("videoId")) // Relate comment to the video
                .append("videoTitle", video.getString("title")) // Optional: Include video metadata
                .append("comentario", commentText);

        comentariosCollection.insertOne(newComment);
        javax.swing.JOptionPane.showMessageDialog(this, "Comentario subido correctamente.", "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        jTextArea_Comentarios.setText(""); // Clear the input field
        loadComments(); // Refresh the JTable
    }//GEN-LAST:event_jButton_Subir_ComentarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Comentarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Comentarios(Usuario, video, database).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Subir_Comentario;
    private javax.swing.JLabel jLabel_Comentario_Nuevo;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel_Comentarios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Comentarios;
    private javax.swing.JTextArea jTextArea_Comentarios;
    private javax.swing.JLabel lblIcono;
    private javax.swing.JLabel lblTitulo;
    // End of variables declaration//GEN-END:variables
}

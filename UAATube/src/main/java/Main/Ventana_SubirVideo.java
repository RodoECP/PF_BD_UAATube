/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import Conexion.conexion;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.gridfs.GridFSBucket;
import com.mongodb.client.gridfs.GridFSBuckets;
import com.mongodb.client.gridfs.GridFSUploadStream;
import com.mongodb.client.gridfs.model.GridFSUploadOptions;
import java.awt.Desktop;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDropEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.bson.Document;
import org.bson.types.ObjectId;

/**
 *
 * @author rodol
 */
public class Ventana_SubirVideo extends javax.swing.JFrame {

    //Variables para almacenar los archivos que se carguen
    String videoCargado = null;
    String miniCargado = null;
    
    //Variable para almacenar la informacion del usuario que haya inicado sesion
    private static Document Usuario;
    
    //Variable para almacenar la pagina de donde se abrio esta
    private static String PaginaOrigen;
    
    //Variable para guardar la conexion a la base de datos;
    private static MongoDatabase database;
    
    /**
     * Creates new form Ventana_SubirVideo
     */
    public Ventana_SubirVideo(Document Usuario, String PaginaOrigen, MongoDatabase database) {
        initComponents();
        initComponents2();
        this.Usuario = Usuario;
        this.PaginaOrigen = PaginaOrigen;
        this.database = database;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        txtTitulo = new javax.swing.JTextField();
        lblDescripcion = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();
        lblCategorias = new javax.swing.JLabel();
        lblInstruccion = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        chkFamilia = new javax.swing.JCheckBox();
        chkMusica = new javax.swing.JCheckBox();
        chkPeliculas = new javax.swing.JCheckBox();
        chkVideojuegos = new javax.swing.JCheckBox();
        chkVlog = new javax.swing.JCheckBox();
        chkTecnologia = new javax.swing.JCheckBox();
        chkCocina = new javax.swing.JCheckBox();
        chkBelleza = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        btnPublicar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lblCargarVideo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lblCargarMini = new javax.swing.JLabel();
        jLabel_Icono_UAATube = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(29, 113, 150));

        jPanel6.setBackground(new java.awt.Color(29, 113, 150));

        jPanel1.setBackground(new java.awt.Color(29, 113, 150));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtDescripcion.setColumns(20);
        txtDescripcion.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(5);
        txtDescripcion.setName("txtDescripcion"); // NOI18N
        jScrollPane1.setViewportView(txtDescripcion);

        txtTitulo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloActionPerformed(evt);
            }
        });

        lblDescripcion.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        lblDescripcion.setText("Descripción:");
        lblDescripcion.setName("lblDescripcion"); // NOI18N

        lblTitulo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Titulo:");

        lblCategorias.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblCategorias.setForeground(new java.awt.Color(255, 255, 255));
        lblCategorias.setText("Categorias:");
        lblCategorias.setName("lblCategorias"); // NOI18N

        lblInstruccion.setBackground(new java.awt.Color(255, 255, 255));
        lblInstruccion.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblInstruccion.setForeground(new java.awt.Color(255, 255, 255));
        lblInstruccion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInstruccion.setText("Llena la informacion de tu video");
        lblInstruccion.setName("lblQueHacer"); // NOI18N

        jPanel5.setBackground(new java.awt.Color(29, 113, 150));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        chkFamilia.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkFamilia.setText("Comedia");

        chkMusica.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkMusica.setText("Musica");

        chkPeliculas.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkPeliculas.setText("Peliculas");

        chkVideojuegos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkVideojuegos.setText("Videojuegos");

        chkVlog.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkVlog.setText("Vlog");

        chkTecnologia.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkTecnologia.setText("Tecnología");

        chkCocina.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkCocina.setText("Cocina");

        chkBelleza.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        chkBelleza.setText("Belleza");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkMusica)
                    .addComponent(chkFamilia)
                    .addComponent(chkPeliculas)
                    .addComponent(chkVideojuegos))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkCocina)
                    .addComponent(chkBelleza)
                    .addComponent(chkVlog)
                    .addComponent(chkTecnologia))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(chkTecnologia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkCocina)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkBelleza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkVlog))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(chkVideojuegos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkMusica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkFamilia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkPeliculas)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDescripcion)
                                    .addComponent(lblTitulo)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(lblCategorias)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblInstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInstruccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTitulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescripcion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategorias))
                .addGap(287, 287, 287))
        );

        jPanel2.setBackground(new java.awt.Color(29, 113, 150));
        jPanel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        btnPublicar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnPublicar.setText("Publicar Video");
        btnPublicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPublicarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(btnPublicar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPublicar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(29, 113, 150));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCargarVideo.setEditable(false);
        txtCargarVideo.setColumns(20);
        txtCargarVideo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtCargarVideo.setLineWrap(true);
        txtCargarVideo.setRows(5);
        txtCargarVideo.setText("Sube aqui tu archivo o da clic para examinar tus archivos");
        txtCargarVideo.setWrapStyleWord(true);
        txtCargarVideo.setAutoscrolls(false);
        txtCargarVideo.setName("txtCargarVideo"); // NOI18N
        txtCargarVideo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCargarVideoMouseClicked(evt);
            }
        });
        txtCargarVideo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtCargarVideoPropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(txtCargarVideo);
        txtCargarVideo.getAccessibleContext().setAccessibleName("");

        lblCargarVideo.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblCargarVideo.setForeground(new java.awt.Color(255, 255, 255));
        lblCargarVideo.setText("Video");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCargarVideo))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCargarVideo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(29, 113, 150));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCargarMini.setEditable(false);
        txtCargarMini.setColumns(20);
        txtCargarMini.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtCargarMini.setLineWrap(true);
        txtCargarMini.setRows(5);
        txtCargarMini.setText("Sube aqui tu archivo o da clic para examinar tus archivos");
        txtCargarMini.setWrapStyleWord(true);
        txtCargarMini.setAutoscrolls(false);
        txtCargarMini.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtCargarMini.setName("txtCargarMini"); // NOI18N
        txtCargarMini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCargarMiniMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(txtCargarMini);

        lblCargarMini.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        lblCargarMini.setForeground(new java.awt.Color(255, 255, 255));
        lblCargarMini.setText("Miniatura");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCargarMini))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCargarMini)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel_Icono_UAATube.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UAATube Icon 150x92.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_Icono_UAATube)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel_Icono_UAATube)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método de inicialización de los componentes. Este método configura las áreas de texto para 
     * arrastrar y soltar archivos y los eventos de clic para cargar videos y miniaturas.
     * También gestiona las acciones al cargar archivos.
     */
    private void initComponents2(){
        txtCargarVideo.setDropTarget(new DropTarget() {
        public synchronized void drop(DropTargetDropEvent evt) {
            try {
                evt.acceptDrop(DnDConstants.ACTION_COPY);
                List<File> droppedFiles = (List<File>)
                    evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                for (File file : droppedFiles) {
                    String fileName = file.getName().toUpperCase();
                    boolean extension = fileName.endsWith(".MP4");
                    if(!extension){
                        JOptionPane.showMessageDialog(rootPane, "El archivo cargado no es un tipo valido", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        txtCargarVideo.setText("Video Cargado: \n" + file.getAbsolutePath());
                        videoCargado = file.getAbsolutePath();
                    }
                }
                evt.dropComplete(true);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            }
        });
        txtCargarMini.setDropTarget(new DropTarget() {
        public synchronized void drop(DropTargetDropEvent evt) {
            try {
                evt.acceptDrop(DnDConstants.ACTION_COPY);
                List<File> droppedFiles = (List<File>)
                    evt.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                for (File file : droppedFiles) {
                    String fileName = file.getName().toUpperCase();
                    boolean extension = fileName.endsWith(".PNG") || fileName.endsWith(".JPG") || fileName.endsWith(".JPEG");
                    if(!extension){
                        JOptionPane.showMessageDialog(rootPane, "El archivo cargado no es un tipo valido", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        txtCargarMini.setText("Miniatura cargada:\n" + file.getAbsolutePath());
                        miniCargado = file.getAbsolutePath();
                    }
                }
                evt.dropComplete(true);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            }
        });

    }
  
    /**
     * Método que gestiona la acción de hacer clic en el campo para cargar el video.
     * Abre el explorador de archivos para seleccionar un archivo de video.
     * 
     * @param evt El evento de clic en el campo de texto para cargar el video.
     */
    private void txtCargarVideoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCargarVideoMouseClicked
        OpenFileViaExplorer("Video");
    }//GEN-LAST:event_txtCargarVideoMouseClicked
    
    /**
     * Método que gestiona la acción de hacer clic en el campo para cargar la miniatura.
     * Abre el explorador de archivos para seleccionar una miniatura.
     * 
     * @param evt El evento de clic en el campo de texto para cargar la miniatura.
     */
    private void txtCargarMiniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCargarMiniMouseClicked
        OpenFileViaExplorer("Mini");
    }//GEN-LAST:event_txtCargarMiniMouseClicked
     
    /**
     * Método que gestiona la acción de hacer clic en el botón de publicar.
     * Verifica si los campos necesarios están completos y luego sube el video.
     * Al finalizar, muestra un mensaje de confirmación y redirige a la ventana principal.
     * 
     * @param evt El evento de hacer clic en el botón de publicar.
     */
    private void btnPublicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPublicarActionPerformed
        if(verificarCampos()){
            subirVideo();
            JOptionPane.showConfirmDialog(this,"El video se ha subido", "Confirmacion",JOptionPane.PLAIN_MESSAGE);
            VentanaPrincipal form = new VentanaPrincipal(Usuario, database);
            form.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this,"Faltan campos de llenar", "Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPublicarActionPerformed

    private void txtCargarVideoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCargarVideoPropertyChange

    }//GEN-LAST:event_txtCargarVideoPropertyChange

    /**
     * Método que gestiona la acción de hacer clic en el botón de cancelar.
     * Redirige al usuario a la ventana principal si estaba en la página principal.
     * 
     * @param evt El evento de hacer clic en el botón de cancelar.
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if (PaginaOrigen == "PaginaPrincipal"){
            VentanaPrincipal form = new VentanaPrincipal(Usuario, database);
            form.setVisible(true);
            this.dispose();
        } else {
            System.out.println(PaginaOrigen);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloActionPerformed

    /**
     * Método que abre el explorador de archivos y permite al usuario seleccionar
     * un archivo de video o miniatura según el tipo proporcionado.
     * 
     * @param tipo El tipo de archivo que se va a cargar: "Video" o "Mini".
     */
    public void OpenFileViaExplorer(String tipo)
    {
        try {
            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter;
            if (tipo == "Video"){
                filter = new FileNameExtensionFilter("Archivos de Video", "mp4");
            } else {
                filter = new FileNameExtensionFilter("Archivos de Imagen", "jpg", "png", "jpeg");
            }
            fileChooser.setFileFilter(filter);
            fileChooser.setCurrentDirectory(new File("."));
            int result = fileChooser.showOpenDialog(null);
            if(result == JFileChooser.APPROVE_OPTION){
                File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
                String fileName = file.getName().toUpperCase();
                if (tipo == "Mini"){
                    boolean extension = fileName.endsWith(".PNG") || fileName.endsWith(".JPG") || fileName.endsWith(".JPEG");
                    if(!extension){
                        JOptionPane.showMessageDialog(rootPane, "El archivo cargado no es un tipo valido", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        txtCargarMini.setText("Miniatura cargada:\n" + file.getName());
                        miniCargado = file.getAbsolutePath();
                    }
                } else {
                    boolean extension = fileName.endsWith(".MP4");
                    if(!extension){
                        JOptionPane.showMessageDialog(rootPane, "El archivo cargado no es un tipo valido", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        txtCargarVideo.setText("Video Cargado: \n" + file.getName());
                        videoCargado = file.getAbsolutePath();
                    }
                }
                
            }
            else if(result == JFileChooser.CANCEL_OPTION)
            {
                System.out.println("Cancelled.");
            }
        }
        catch (Exception e)
        {
            System.out.println(e);
        }
    }
    
    /**
     * Método que sube el video y la miniatura al servidor de base de datos GridFS.
     * Guarda la relación entre el video, miniatura y metadatos en la base de datos.
     */
    private void subirVideo(){
        try {
            GridFSBucket gridFSBucket = GridFSBuckets.create(database);
            try (InputStream videoStream = new FileInputStream(videoCargado);
                    InputStream miniStream = new FileInputStream(miniCargado)) {
                File video = new File(videoCargado);
                String videoFileName = video.getName();
                ObjectId videoId = gridFSBucket.uploadFromStream(videoFileName, videoStream);
                System.out.println("Video subido con éxito: " + videoFileName);
                
                File mini = new File(miniCargado);
                String thumbnailFileName = mini.getName();
                ObjectId miniId = gridFSBucket.uploadFromStream(thumbnailFileName, miniStream);
                System.out.println("Miniatura subida con éxito: " + thumbnailFileName);
                
                List<String> categorias = juntarCategorias();
                Document videoMetadata = new Document()
                        .append("videoId", videoId)
                        .append("thumbnailId", miniId)
                        .append("autor", Usuario.getString("nombre_canal"))
                        .append("title", txtTitulo.getText())
                        .append("description", txtDescripcion.getText())
                        .append("categorias", categorias)
                        .append("me_gusta", 0);
                database.getCollection("Videos").insertOne(videoMetadata);
                System.out.println("Relacion entre video y miniatura guardada.");
            }
        } catch (IOException ex) {
            Logger.getLogger(Ventana_SubirVideo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * Método que junta las categorías seleccionadas en una lista.
     * 
     * @return Una lista de categorías seleccionadas.
     */
    private List juntarCategorias(){
        List<String> categorias = new ArrayList<>();
        if (chkVideojuegos.isSelected()){
            categorias.add("Videojuegos");
        }
        if (chkPeliculas.isSelected()){
            categorias.add("Peliculas");
        }
        if (chkFamilia.isSelected()){
            categorias.add("Familia");
        }
        if (chkMusica.isSelected()){
            categorias.add("Musica");
        }
        if (chkTecnologia.isSelected()) {
            categorias.add("Tecnologia");
        }
        if (chkBelleza.isSelected()) {
            categorias.add("Belleza");
        }
        if(chkCocina.isSelected()){
            categorias.add("Cocina");
        }
        if(chkVlog.isSelected()){
            categorias.add("Vlog");
        }
        return categorias;
    }

    /**
     * Método que verifica si todos los campos necesarios para publicar un video están completos.
     * 
     * @return true si todos los campos están llenos; false en caso contrario.
     */
    private boolean verificarCampos(){
        if (videoCargado == null|| 
                miniCargado == null ||
                txtTitulo.getText().isBlank() ||
                txtDescripcion.getText().isBlank()||
                juntarCategorias().isEmpty()){
            return false;
        } else {
            return true;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_SubirVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_SubirVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_SubirVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_SubirVideo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_SubirVideo(Usuario, PaginaOrigen, database).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPublicar;
    private javax.swing.JCheckBox chkBelleza;
    private javax.swing.JCheckBox chkCocina;
    private javax.swing.JCheckBox chkFamilia;
    private javax.swing.JCheckBox chkMusica;
    private javax.swing.JCheckBox chkPeliculas;
    private javax.swing.JCheckBox chkTecnologia;
    private javax.swing.JCheckBox chkVideojuegos;
    private javax.swing.JCheckBox chkVlog;
    private javax.swing.JLabel jLabel_Icono_UAATube;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblCargarMini;
    private javax.swing.JLabel lblCargarVideo;
    private javax.swing.JLabel lblCategorias;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblInstruccion;
    private javax.swing.JLabel lblTitulo;
    private final javax.swing.JTextArea txtCargarMini = new javax.swing.JTextArea();
    private final javax.swing.JTextArea txtCargarVideo = new javax.swing.JTextArea();
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}


